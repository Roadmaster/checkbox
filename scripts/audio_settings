#!/usr/bin/python3

import sys
import re

from argparse import ArgumentParser
from subprocess import check_output

TYPES = ("source","sink")

entries_regex = re.compile("\* index.*?(?=current latency)", re.DOTALL)
index_regex = re.compile("(?<=\* index: )[0-9]")
muted_regex = re.compile("(?<=muted: ).*")
volume_regex = re.compile("(?<=volume: 0: )\s*[0-9]*")

def store_audio_settings(file):

    settings_file = open(file, 'w')

    for type in TYPES:
        pacmd_entries = check_output(["pacmd","list-%ss" % type],
                                     universal_newlines=True)
        entries = entries_regex.search(pacmd_entries)
        print(entries.group(0))

        index = index_regex.search(entries.group(0))
        print("%s_index: %s" % (type, index.group(0).strip()), file=settings_file)
        
        muted = muted_regex.search(entries.group(0))
        print("%s_muted: %s" % (type, muted.group(0).strip()), file=settings_file)
        
        volume = volume_regex.search(entries.group(0))
        print("%s_volume: %s" % (type, volume.group(0).strip()), file=settings_file)


def set_audio_settings(device, mute, volume):
    print(device, mute, volume)

def restore_audio_settings(file):
    print(file)

def main():
    parser = ArgumentParser("Manipulate PulseAudio settings")
    parser.add_argument("action",
                        choices=['store','set','restore'],
                        help="Action to perform with the audio settings")
    parser.add_argument("-d","--device",
                        help="The device to apply the new settings to.")
    parser.add_argument("-m","--mute",
                        action="store_true",
                        help="""The new value for the mute setting
                                of the specified device.""")
    parser.add_argument("-v","--volume",
                        type=int,
                        help="""The new value for the volume setting
                                of the specified device.""")
    parser.add_argument("-f","--file",
                        help="""The file to store settings in or restore
                                settings from.""")
    args = parser.parse_args()

    print(args.action)

    if args.action == "store":
        if not args.file:
            print("No file specified to store audio settings!")
            return 1

        store_audio_settings(args.file)
    elif args.action == "set":
        if not args.device:
            print("No device specified to change settings of!")
            return 1
        if not args.volume:
            print("No volume level specified!")
            return 1

        set_audio_settings(args.device, args.mute, args.volume)
    elif args.action == "restore":
        restore_audio_settings(args.file)
    else:
        print(args.action + "is not a valid action")
        return 1

    return 0

if __name__ == "__main__":
    sys.exit(main())
