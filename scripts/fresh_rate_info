#!/usr/bin/python3
# -*- coding: utf-8 -*-
#
# fresh_rate_info
#
# This file is part of Checkbox.
#
# Copyright 2012 Canonical Ltd.
#
# Authors: Shawn Wang <shawn.wang@canonical.com>
#
# Checkbox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Checkbox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Checkbox.  If not, see <http://www.gnu.org/licenses/>.

import os
import re
import sys

from subprocess import Popen, PIPE

#LVDS connected 1366x768+1920+0 (normal left inverted right x axis y axis) 256mm x 144mm
#HDMI-0 disconnected (normal left inverted right x axis y axis)
#VGA-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 509mm x 286mm

def xrandr_paser(data=None):
    b = None
    xrandrs = list()
    for line in str(data).split('\n'):
        # VGA-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 509mm x 286mm
        for match in re.finditer('(.+) connected (\d+x\d+)\+', line):
            a = match.group(1)
            b = match.group(2)
            break
        if b == None:
            continue
        #print "%s ---"%line
        for match in  re.finditer('%s\s+(.+)\*'%b, line):
            c = match.group(1)
            xrandr = {'connector':a, 'resolution':b, 'refresh_rate':c}
            xrandrs.append(xrandr)

    return xrandrs

def main():
    proc = Popen('xrandr --current'.split(), stdout=PIPE, stderr=PIPE)
    return_code = proc.wait()
    if return_code != 0:
        return return_code
    else:
        xrandrs=xrandr_paser(data=proc.stdout.read().decode('utf-8'))
        for xrandr in xrandrs:
            print("Connector: %s, Resolution: %s RefreshRate: %s" % (xrandr['connector'], xrandr['resolution'], xrandr['refresh_rate']))


if __name__ == '__main__':
    sys.exit(main())

