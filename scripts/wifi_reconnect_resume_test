#!/usr/bin/env python3

# Copyright (C) 2012 Canonical, Ltd.

import re
import subprocess
import argparse
import sys


def getwifitime():
    data = subprocess.check_output(['dmesg'], universal_newlines=True)
    syntax = re.compile("\[(.*)\] wlan.* associated")
    results = re.findall(syntax, data)
    if not results:
        return None
    else:
        return results[-1]


def getresumetime():
    data = subprocess.check_output(['dmesg'], universal_newlines=True)
    syntax = re.compile("\[(.*)\].ACPI: Low-level resume complete")
    results = re.findall(syntax, data)
    if not results:
        return None
    else:
        return results[-1]


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--timeout', action="store", type=int,
        required=True, help="Specified max time allowed for Wifi to reconnect")
    args = parser.parse_args()

    resumetime = getresumetime()
    if resumetime is None:
        print("Error Obtaining resume time after S3", file=sys.stderr)
        return 1

    wifitime = getwifitime()
    if wifitime is None:
        print("Error Obtaining wifi startup time after S3", file=sys.stderr)
        return 1

    timedif = float(wifitime) - float(resumetime)
    print("Your Wifi Resumed in %s seconds after the last suspend" % timedif)
    if timedif > args.timeout:
        print("FAIL: the network failed to reconnect within the allotted time")
        return 1
    else:
        print("PASS: the network connected within the allotted time specified")
        return 0

if __name__ == "__main__":
    sys.exit(main())
