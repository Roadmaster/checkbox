#!/usr/bin/python3
# -*- coding: utf-8 -*-
#
# graphic_memory_info
#
# This file is part of Checkbox.
#
# Copyright 2012 Canonical Ltd.
#
# Authors: Shawn Wang <shawn.wang@canonical.com>
#
# Checkbox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Checkbox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Checkbox.  If not, see <http://www.gnu.org/licenses/>.


import os
import re
import sys

from subprocess import Popen, PIPE

# 00:01.0 VGA compatible controller: Advanced Micro Devices [AMD] nee ATI Wrestler [Radeon HD 6320] (prog-if 00 [VGA controller])

def vgamem_paser(data=None):
    a = None
    vgamems=list()
    for line in data.split('\n'):
        for match in re.finditer('(\d\d:\d\d\.\d) VGA(.+): (.+)', line):
            a = match.group(1)
            b = match.group(3)
        if a == None:
            continue
#Memory at e0000000 (32-bit, prefetchable) [size=256M]

        #for match in  re.finditer('^Memory (?+) \[size=(\d+)M\]', line):
        for match in  re.finditer('Memory(.+)prefetchable\) \[size=(\d+)M\]', line):
            c = match.group(2)
            vgamem = {'device':a, 'name':b, 'vgamem':c}
            vgamems.append(vgamem)
    return vgamems

#00:01.0 VGA compatible controller: Advanced Micro Devices [AMD] nee ATI Wrestler [Radeon HD 6320]
#lspci -v -s 00:01.0 | grep ' prefetchable'
def main():
    proc = Popen('lspci -v'.split(), stdout=PIPE, stderr=PIPE)
    return_code = proc.wait()
    if return_code != 0:
        return return_code
    else:
        vgamems=vgamem_paser(data=proc.stdout.read())
        for vgamem in vgamems:
            print "Device: %s, Name: %s, VGA Memory Size: %sM" % (vgamem['device'], vgamem['name'], vgamem['vgamem'])

if __name__ == '__main__':
    sys.exit(main())

