#!/usr/bin/env python3

import re
from io import StringIO
from subprocess import Popen, PIPE
from checkbox.parsers.udevadm import UdevadmParser

# Command to retrieve udev information.
COMMAND = 'udevadm info --export-db'


class TouchResult:

    attributes = {}

    def addDevice(self, device):
        if getattr(device, 'category') == 'TOUCH':
            self.attributes['product'] = getattr(device, 'product')


def get_touch_attributes():
    output, err = Popen(COMMAND, stdout=PIPE, shell=True).communicate()
    if err:
        return None

    udev = UdevadmParser(StringIO(output.decode("unicode-escape")))

    result = TouchResult()
    udev.run(result)

    return result.attributes.get('product')


def can_scroll(touchpad):
    COMMAND = "xinput list '%s'" % touchpad
    horizontal_supported = ""
    vertical_supported = ""
    bl = re.compile("Button labels")
    vert_up = re.compile(".*Button Wheel Up.*")
    vert_down = re.compile(".*Button Wheel Down.*")
    horiz_left = re.compile(".*Button Horiz Wheel Left.*")
    horiz_right = re.compile(".*Button Horiz Wheel Right.*")
    proc = Popen(COMMAND, stdout=PIPE, shell=True, universal_newlines=True)
    output = proc.stdout.read()
    if bl.findall(output):
        if vert_up.search(output) and vert_down.search(output):
            vertical_supported = "supported"
        else:
            vertical_supported = "unsupported"
        if horiz_left.search(output) and horiz_right.search(output):
            horizontal_supported = "supported"
        else:
            horizontal_supported = "unsupported"
    else:
        return "unuspported", "unsupported"
    return horizontal_supported, vertical_supported


def main():
    product = get_touch_attributes()
    if product:
        print("device_name: %s" % product)
        horiz,vert = can_scroll(product)
        print("horizontal_scroll: %s" % horiz)
        print("vertical_scroll: %s" % vert)
    else:
        print("device_name: None")


if __name__ == "__main__":
    main()
