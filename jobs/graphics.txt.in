plugin: shell
name: graphics/xorg-version
requires: package.name == "x11-utils"
command: xdpyinfo | grep "^X.Org version" | cut -d ':' -f 2 | tr -d ' '
_description: Test to output the Xorg version

plugin: shell
name: graphics/gtkperf
depends: graphics/xorg-version
requires: package.name == 'gtkperf'
command: gtkperf -a | grep "Total time:"
_description:
 Run gtkperf to make sure that GTK based test cases work

plugin: manual
name: graphics/resolution-change
depends: graphics/xorg-version
_description:
 PURPOSE:
     This test will verify that the GUI is usable after manually changing resolution
 STEPS:
     1. Open the Displays application
     2. Select a new resolution from the dropdown list
     3. Click on Apply
     4. Select the original resolution from the dropdown list
     5. Click on Apply
 VERIFICATION:
     Did the resolution change as expected?

plugin: manual
name: graphics/rotation
depends: graphics/xorg-version
_description:
 PURPOSE:
     This test will test display rotation
 STEPS:
     1. Open the Displays application
     2. Select a new rotation value from the dropdown list
     3. Click on Apply
     4. Click on Restore Previous Configuration
     5. Click on Apply
     6. Repeat 2-5 for different rotation values
 VERIFICATION:
     Did the display rotation change as expected?

plugin: shell
name: graphics/xorg-process
requires: package.name == 'xorg' and package.name == 'procps'
command: pgrep -f '/usr/bin/X' >/dev/null
_description: Test that the X process is running.

plugin: shell
name: graphics/xorg-failsafe
requires: package.name == 'xorg'
command: ! test -e /var/log/Xorg.failsafe.log
_description: Test that the X is not running in failsafe mode.

plugin: shell
name: graphics/xorg-memory
requires: package.name == 'xorg' and device.driver == 'i915'
user: root
command: xorg_memory_test xeyes
_description: Test that X does not leak memory when running programs on systems with intel based graphics.

plugin: manual
name: graphics/resolution
requires:
 device.category == 'VIDEO'
command: resolution_test
_description:
 PURPOSE:
     This test will verify the default display resolution
 STEPS:
     1. This display is using the following resolution:
 INFO:
     $output
 VERIFICATION:
     Is this acceptable for your display?

plugin: shell
name: graphics/minimum_resolution
requires:
 device.category == 'VIDEO'
command: resolution_test --horizontal 800 --vertical 600
_description:
 Ensure the current resolution meets or exceeds the recommended minimum
 resolution (800x600). See here for details:
 .
 https://help.ubuntu.com/community/Installation/SystemRequirements

plugin: manual
name: graphics/display
requires: package.name == 'xorg' and package.name == 'python-gst0.10'
command: gst_pipeline_test -t 2 'videotestsrc ! ffmpegcolorspace ! gconfvideosink'
_description:
 PURPOSE:
     This test will test the default display
 STEPS:
     1. Click "Test" to display a video test.
 VERIFICATION:
     Do you see color bars and static?

plugin: shell
name: graphics/VESA_drivers_not_in_use
command: cat /var/log/Xorg.0.log | perl -e '$a=0;while(<>){$a++ if /Loading.*vesa_drv\.so/;$a-- if /Unloading.*vesa/&&$a}exit 1 if $a'
_description: Check that VESA drivers are not in use

plugin: manual
name: graphics/cycle_resolution
requires: package.name == 'xorg'
depends: graphics/VESA_drivers_not_in_use
command: xrandr_cycle
_description:
 PURPOSE:
     This test cycles through the detected video modes
 STEPS:
     1. Click "Test" to start cycling through the video modes
 VERIFICATION:
     Did the screen appear to be working for each mode?

plugin: shell
name: graphics/compiz_check
requires: package.name == 'nux-tools'
command:
 perl -e '$a=`/usr/lib/nux/unity_support_test -c -p`;$a=~s/\e\[[\d;]*m//g;print $a;exit($? ? 1:0)'
_description: Check that hardware is able to run compiz

plugin: shell
name: graphics/unity-support
requires: package.name == 'nux-tools'
command:
 perl -e '$a=`/usr/lib/nux/unity_support_test -p`;$a=~s/\e\[[\d;]*m//g;print $a;exit($? ? 1:0)'
_description: Check that hardware is able to run Unity 3D

plugin: manual
name: graphics/glxgears
requires: package.name == 'mesa-utils'
command: glxgears; true
_description:
 PURPOSE:
     This test tests the basic 3D capabilities of your video card
 STEPS:
     1. Click "Test" to execute an OpenGL demo. Press ESC at any time to close.
     2. Verify that the animation is not jerky or slow.
 VERIFICATION:
     1. Did the 3d animation appear?
     2. Was the animation free from slowness/jerkiness?

plugin: shell
name: graphics/screenshot
requires: package.name == 'fswebcam'
command: camera_test still --highest-device -f ${CHECKBOX_DATA}/screenshot.jpg -q 2>&1 | ansi_parser
_description:
 PURPOSE:
     Take a screengrab of the current screen (logged on Unity desktop)
 STEPS:
     1. Take picture using USB webcam
 VERIFICATION:
     1. Review attachment manually later

plugin: attachment
name: screenshot.jpg
depends: graphics/screenshot
command: cat ${CHECKBOX_DATA}/screenshot.jpg
_description: Attaches the screenshot captured in graphics/screenshot.
